@model VoiceChef.Models.Ingredient


@{
    ViewBag.Title = "Create";
    
    

}


<%= 
        public static IEnumerable<VoiceChef.Models.Category> Colors = new List<VoiceChef.Models.Category> { 
    new VoiceChef.Models.Category {
        EngName = "Blue",
        Name = "Red"
    },
    new VoiceChef.Models.Category {
       EngName = "Blue",
        Name = "Blue"
    }
    }
%>

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ingredient</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngName)
                @Html.ValidationMessageFor(model => model.EngName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pieces, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pieces)
                @Html.ValidationMessageFor(model => model.Pieces)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NamePieces, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NamePieces)
                @Html.ValidationMessageFor(model => model.NamePieces)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngNamePieces, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngNamePieces)
                @Html.ValidationMessageFor(model => model.EngNamePieces)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teaspoon, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teaspoon)
                @Html.ValidationMessageFor(model => model.Teaspoon)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tablespoon, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tablespoon)
                @Html.ValidationMessageFor(model => model.Tablespoon)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <%= Html.DropDownListFor(n => n.Category,
                new SelectList(Colors, "EngName", "Name")) %>
    @Html.ValidationMessageFor(model => model.Category)
</div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
